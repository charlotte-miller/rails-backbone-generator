# ====================================================
# =                      Model                       =
# ====================================================
BackboneFactory.define '<%= model_name %>', <%= "#{namespace('classify')}.Models.#{model_name('classify')}" %>, ->
  # title:       'Your Title Here'
  # description: 'string, function, or another Factory'
  # size:         _(['Tall', 'Grande', 'Venti', 'Trenta']).shuffle()[0]
  # section:      Factory.section()




# =======================================================
# =  FactoryGirl Interface:                             =
# =  Factory.modleName( {overrides:here} )              =
# =======================================================

# Models
window.Factory = (->
  factories = [{}].concat _(BackboneFactory.factories).keys()
  _(factories).inject (memo, factory)->
    memo[factory]= (overrides)-> BackboneFactory.create factory, -> overrides
    memo
)()


<%- if collection_name -%>
# ====================================================
# =                   Collection                     =
# ====================================================

_(window.Factory).extend({        
  <%= collection_name %>:   (overrides)->   new <%= "#{namespace('classify')}.Collections.#{collection_name('classify')}" %>  _({
    models: _([1,2,3]).map -> BackboneFactory.create('<%= model_name %>', ->)
    }).extend( overrides )

})
<%- end -%>


# ====================================================
# =               Complex Factories                 =
# ====================================================

# section_w_section_materials: (overrides)-> Factory.section( _( section_materials: Factory.section_materials().models ).extend(overrides) )
# distributor_w_offers:        (overrides)-> Factory.distributor( _(offers: Factory.offers().models ).extend(overrides))